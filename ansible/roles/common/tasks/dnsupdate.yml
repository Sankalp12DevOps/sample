
- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'MONGO_DNSNAME'
   replace: 'mongodb-{{ENV}}.roboshop.internal'
  when: COMPONENT == "catalogue"



- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'MONGO_ENDPOINT'
   replace: 'mongodb-{{ENV}}.roboshop.internal'
  when: COMPONENT == "user" or COMPONENT == "catalogue"
 
- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'REDIS_ENDPOINT'
   replace: 'redis-{{ENV}}.roboshop.internal'
  when: COMPONENT == "user" or COMPONENT == "cart"

- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'CATALOGUE_ENDPOINT'
   replace: 'catalogue-{{ENV}}.roboshop.internal'
  when: COMPONENT == "cart"

- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'CART_ENDPOINT'
   replace: 'cart-{{ENV}}.roboshop.internal'
  when: COMPONENT == "shipping"


- name: replace the component with the DNS name
  ansible.builtin.replace:
   path: /home/{{USER}}/{{COMPONENT}}/systemd.service
   regexp: 'DBHOST'
   replace: 'mysqldb-{{ENV}}.roboshop.internal'
  when: COMPONENT == "shipping"